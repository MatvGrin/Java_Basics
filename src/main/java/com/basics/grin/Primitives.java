package com.basics.grin;

public class Primitives {
    public static void main(String[] args) {
        byte var1 = -35;//Для представления целочисленных значений используется целочисленный литерал в различных системах счисления, который имеет тип int.
        short var2 = 0b1011;
        int var3 = 0x51b;
        int var4 = 071;
        long var5 = 12345L;//Если необходимо определить длинный литерал типа long, в конце указывается буква (суффикс) L или l. Для лучшей восприимчивости рекомендуется указывать в верхнем регистре.
        long var6 = 0xffffL;
        int var7 = 7000000;//С версии Java 7 для читабельности длинных литералов (большие числа) в него можно добавлять символ подчеркивания ("_") в качестве разделителя цифр. Эта форма применима и для чисел с плавающей точкой.
        int var8 = 7_000_000;
        double var9 = 1.618;//с фиксированной точкой:
        double var10 = -0.112E-05;//в экспоненциальной форме (плавающая точка):
        float var11 = -18.456F;//При необходимости указания литерала типа float, после последней цифры в качестве суффикса применяется символ F или f:
        boolean flag = true;//К булевым (логическим) литералам относятся true и false.
        char ch1 = '3';
        char ch2 = 'g';
        char ch3 = '(';
        char ch4 = '\u0034';
        char ch5 = '\u002e';
        char ch6 = '\t';
        char ch7 = '\n';
        char ch8 = '\r';
        char ch9 = '\b';
        //*'\n' - новая строка
        //'\r' - переход к началу текущей строки
        //'\f' - новая страница '
        //\t' - табуляция
        //'\b' - возврат на один символ
        //'\ddd' - восьмеричный символ*//
        String str = "Text";
        System.out.println("Hello");
        int number = 100;
//        String str = "Value";
        System.out.print(str + " number " + number + '\n');//Обратите внимание, что строковый литерал не должен заканчиваться символом '\0', так как это не строка в формате ASCII-кода, а объект, состоящий из набора символов. Со строковым литералом можно выполнять различные операции, описанные в методах класса String. Детальнее работа со строками будет рассмотрена в следующих уроках. Сейчас остановимся на операции конкатенации (объединения) строк, которая обозначается знаком +. Эта операция добавляет в конец исходного объекта-строки строковое представление другого объекта.
        var x = 10;//В версии Java 10 в язык было добавлено ключевое слово var, с помощью которого также возможно определение переменной. Тип переменной будет такой же, как и у литерала, которым ее инициализируют.
        var i = Integer.valueOf(2);
//        var str = "java";

    }
}
